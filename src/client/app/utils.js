export const getInitialEasyState = () => {
  return {
    board: getRandomEasyBoard(),
    difficulty: 'easy',
    gameOver: false,
    message: ''
  };
};

export const getInitialHardState = () => {
  return {
    board: getRandomHardBoard(),
    difficulty: 'hard',
    gameOver: false,
    message: ''
  };
};

export const toggle = (board, r, c) => {
  // Toggle self
  (board[r][c] === 0) ? board[r][c] = 1 : board[r][c] = 0;

  // Toggle up
  if (board[r - 1] !== undefined) {
    board[r - 1][c] = (board[r - 1][c] === 0) ? 1 : 0;
  }

  // Toggle right
  if (board[r][c + 1] !== undefined) {
    board[r][c + 1] = (board[r][c + 1] === 0) ? 1 : 0;
  }

  // Toggle down
  if (board[r + 1] !== undefined) {
    board[r + 1][c] = (board[r + 1][c] === 0) ? 1 : 0;
  }

  // Toggle left
  if (board[r][c - 1] !== undefined) {
    board[r][c - 1] = (board[r][c - 1] === 0) ? 1 : 0;
  }

  return board;
};

export const boardComplete = (board) => {
  for (let r = 0; r < 5; r++) {
    if (board[r].includes(0)) { return false }
  }
  return true;
};

export const getWinningMessage = (board) => {
  return {
    board,
    gameOver: true,
    message: 'You win!'
  };
};

export const getGameOverMessage = () => {
  return {
    message: 'Game over. Please start a new game.'
  };
};

const getRandomEasyBoard = () => {
  const easyBoards = [
    [[1,0,0,0,1],
     [0,1,0,1,0],
     [0,0,1,0,0],
     [0,1,0,1,0],
     [1,0,0,0,1]],
    [[0,0,1,0,0],
     [0,1,0,1,0],
     [1,0,1,0,1],
     [0,1,0,1,0],
     [0,0,1,0,0]],
    [[0,0,0,0,0],
     [0,1,1,1,0],
     [0,1,0,1,0],
     [0,1,1,1,0],
     [0,0,0,0,0]],
    [[1,0,1,0,1],
     [0,1,0,1,0],
     [1,0,1,0,1],
     [0,1,0,1,0],
     [1,0,1,0,1]],
    [[0,1,0,1,0],
     [1,0,0,0,1],
     [0,0,1,0,0],
     [1,0,0,0,1],
     [0,1,0,1,0]]
  ];

  const randomIndex = Math.floor(Math.random() * easyBoards.length);
  const randomBoard = easyBoards[randomIndex];
  return randomBoard;
};

const getRandomHardBoard = () => {
  const hardBoards = [
    [[0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0],
     [0,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0],
     [1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0],
     [1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
     [1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0],
     [1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0],
     [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
     [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],
     [0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1],
     [0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0],
     [0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1],
     [0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1],
     [0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1],
     [0,1,0,0,1,1,0,0,0,1,0,0,0,0,1,0],
     [1,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0],
     [0,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0]],
    [[0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
     [0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0],
     [0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0],
     [0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0],
     [0,1,1,0,0,1,1,1,1,0,0,0,1,1,1,0],
     [1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1],
     [1,0,0,0,1,1,1,1,1,1,0,0,1,1,0,1],
     [1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1],
     [1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1],
     [1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,1],
     [1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1],
     [0,1,1,1,0,0,1,0,0,1,0,0,1,1,1,0],
     [0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0],
     [0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],
     [0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0],
     [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0]],
    [[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0],
     [0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0],
     [0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],
     [0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],
     [0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0],
     [1,0,0,1,1,1,0,0,0,0,1,0,1,0,0,1],
     [1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,1],
     [0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],
     [1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1],
     [1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1],
     [1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1],
     [1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0],
     [0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
     [0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],
     [0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0],
     [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0]],
    [[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
     [1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0],
     [1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
     [1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
     [1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0],
     [0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0],
     [0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0],
     [0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0],
     [0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,0],
     [1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0],
     [1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
     [1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0],
     [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],
     [1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0],
     [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]
  ];

  const randomIndex = Math.floor(Math.random() * hardBoards.length);
  const randomBoard = hardBoards[randomIndex];
  return randomBoard;
};
